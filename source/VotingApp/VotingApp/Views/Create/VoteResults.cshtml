@model VotingApp.ViewModel.VotesResultsVM;
@{
	ViewData["Title"] = "Poll Results Page";
}

<div class="jumbotron jumbotron-fluid full-width text-white" style="margin-bottom: 0px; 
	                                                                height: 90vh; 
	                                                                background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 1)), url(/Images/bannerImage6.jpg); 
	                                                                background-size: cover; left: 50%;
	                                                                margin-left: -50vw;
	                                                                margin-right: -50vw;
	                                                                max-width: 100vw;
	                                                                position: relative;
	                                                                right: 50%;
	                                                                width: 100vw;"> 
	<div class="text-center text-white">
		<h1 class="display-4">Poll Results</h1>
		<hr class="mb-4"/>

	</div>
	@if (Model != null && Model.VotingResults != null && Model.VotingResults.Count > 0)
	{
		@for(int i = 0; i < Model.VotingResults.Count; i++) 
		{
			@if(i > 0)
			{
				<br /><hr style="border-top: 2px solid white;"><br />
			}
			<div class="text-center text-white mb-3">
				<h5>Poll Title: @Model.VotingResults[i].VoteTitle</h5>
				<h5>Poll Description: @Model.VotingResults[i].VoteDescription</h5>
				@if (Model.VotingResults[i].AnonymousVote)
				{
					<h5>This poll is anonymous</h5>
				}
				else
				{
					<h5>This poll is not anonymous</h5>
				}
				@if (Model.VotingResults[i].ChartVoteOptions.Count == 0)
				{
					<div class="text-center text-white mb-3">
						<h5><mark>There are no submitted votes yet for this poll</mark></h5>
					</div>
				}
			</div>
			<div class="container text-center text-white">
				<div class="row">
					@{
						var classCol = "col-12";
					}
					@if (Model.VotingResults.Count == 1) {
						classCol = "col-6";

						<div class="col-6 p-2 mr-2">
							<div class="container d-flex justify-content-center">
								<div id="piechart3d"></div>
							</div>
						</div>
					}
					<div class="@classCol p-2">
						<div class="table-responsive">
							<table class="table table-borderless rounded bg-dark text-white table-striped">
								<tr class="bg-secondary">
									<th>Vote Option <span data-toggle="tooltip" data-placement="bottom" title="Here are the vote options for this given vote. The winning vote row is highlighted in red. If there is a tie the winning votes will be highlighted yellow.">&#8505;</span></th>
									<th>Votes <span data-toggle="tooltip" data-placement="bottom" title="Here are the total votes for each option. If there is a 0 it means no one has voted for this option.">&#8505;</span></th>
								</tr>
								@foreach (var vote in Model.VotingResults[i].TotalVotesForEachOption)
								{
									var winnerCheck = false;
									foreach (var winner in Model.VotingResults[i].Winners)
									{
										if (winner.Key.Id == vote.Key.Id)
										{
											winnerCheck = true;
										}
									}
									if (winnerCheck && Model.VotingResults[i].Winners.Count == 1)
									{
										<tr class="table-danger">
											<td>@vote.Key.VoteOptionString</td>
											<td>@vote.Value</td>
										</tr>
									}
									else if (winnerCheck && Model.VotingResults[i].Winners.Count > 1)
									{
										<tr class="table-warning">
											<td>@vote.Key.VoteOptionString</td>
											<td>@vote.Value</td>
										</tr>
									}
									else
									{
										<tr class="text-white-50">
											<td>@vote.Key.VoteOptionString</td>
											<td>@vote.Value</td>
										</tr>
									}
								}
								<tfoot>
								<tr class="table-info">
									<td>Total Votes: <span data-toggle="tooltip" data-placement="bottom" title="Here are the overall total votes for your created vote.">&#8505;</span></td>
									<td>@Model.VotingResults[i].TotalVotesCount</td>
								</tr>
								</tfoot>
							</table>
						</div>
					</div>
					@if (!Model.VotingResults[i].AnonymousVote)
					{
						<div class="container-fluid">
							<div class="row">
								<div class="col-6 p-2">
									<h6 mb-2>Individual votes for user's who were logged in:</h6>
									<div class="table-responsive">
										<table class="table table-borderless rounded bg-dark text-white table-striped">
											<tr class="bg-secondary">
												<th>Vote Choice<span data-toggle="tooltip" data-placement="bottom" title="Here is the vote choice chosen by this user.">&#8505;</span></th>
												<th>Voter's Email <span data-toggle="tooltip" data-placement="bottom" title="Here is the user's email who cast this vote.">&#8505;</span></th>
											</tr>
											@foreach (var vote in Model.VotingResults[i].VotesForLoggedInUsers)
											{
												<tr class="text-white-50">
													<td>@vote.Value</td>
													<td>@vote.Key</td>
												</tr>
											}
										</table>
									</div>
								</div>
								<div class="col-6 p-2">
									<h6 mb-2>Votes for user's who were not logged in:</h6>
									<div class="table-responsive">
										<table class="table table-borderless rounded bg-dark text-white table-striped">
											<tr class="bg-secondary">
												<th>Vote Choice<span data-toggle="tooltip" data-placement="bottom" title="Here is the vote choice chosen by users not logged in.">&#8505;</span></th>
												<th>Total Votes<span data-toggle="tooltip" data-placement="bottom" title="Here is the total votes for this option by user's not logged in.">&#8505;</span></th>
											</tr>
											@foreach (var vote in Model.VotingResults[i].VotesForUsersNotLoggedIn)
											{
												<tr class="text-white-50">
													<td>@vote.Key.VoteOptionString</td>
													<td>@vote.Value</td>
												</tr>
											}
										</table>
									</div>
								</div>
							</div>
						</div>
					}
				</div>
			</div> 
		}
	}
	<div class="text-center mt-3 mb-2">
		<form asp-action="CreatedVotesReview" method="get">
			<td><button type="submit" style="width:140px !important" class="btn btn-light bg-success btn-outline-primary mb-2">Back to Poll Review</button></td>
		</form>
	</div>
</div>


@section Scripts
{
	<script>
		$(document).ready(function () {

			google.charts.load('current', { 'packages': ['corechart'] });
			google.charts.setOnLoadCallback(drawChart);

			function drawChart() {

				var optionsList = ['@Html.Raw(string.Join("', '",Model.VotingResults[0].ChartVoteOptions))'];
				var countList = ['@Html.Raw(string.Join("', '",Model.VotingResults[0].ChartVoteTotals))'];


				var data = new google.visualization.DataTable();
				data.addColumn('string', 'Vote Option');
				data.addColumn('number', 'Votes');

				var voteData = [];

				for (var i = 0; i < '@Model.VotingResults[0].ChartVoteOptions.Count'; i++) {
					var voteRow = [optionsList[i], parseInt(countList[i])];
					voteData.push(voteRow);
				}

				data.addRows(voteData);

				var options = {
					title: 'Your Poll Results',
					titleTextStyle: {fontSize: 30, bold: true},
					legendTextStyle: {bold: true},
					pieSliceText: 'value',
					backgroundColor: '#BEBEBE',
					width: 550,
					height: 400,
					chartArea:{top:'15%',width:'90%',height:'95%'},
					is3D: true
				};

				var chart = new google.visualization.PieChart(document.getElementById('piechart3d'));

				chart.draw(data, options);
			}
		});
	</script>
}

