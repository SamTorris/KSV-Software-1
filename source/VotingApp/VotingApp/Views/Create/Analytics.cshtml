@model VotingApp.ViewModel.AnalyticsVM;
@{
	ViewData["Title"] = "Vote Analytics Page";
}

<div class="jumbotron jumbotron-fluid full-width text-white" style="margin-bottom: 0px; 
	                                                                height: 90vh; 
	                                                                background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 1)), url(/Images/bannerImage6.jpg); 
	                                                                background-size: cover; left: 50%;
	                                                                margin-left: -50vw;
	                                                                margin-right: -50vw;
	                                                                max-width: 100vw;
	                                                                position: relative;
	                                                                right: 50%;
	                                                                width: 100vw;"> 
	<div class="text-center text-white">
		<h1 class="display-4">Vote Analytics</h1>
		<hr class="mb-4"/>

	</div>
	@if (Model != null)
	{
		<div class="text-center text-white mb-3">
			<h5>Vote Title: @Model.VoteTitle</h5>
			<h5>Vote Description: @Model.VoteDescription</h5>
		</div>
		@if (Model.ChartVoteOptions.Count == 0)
		{
			<div class="text-center text-white mb-3">
				<h5><mark>There are no submitted votes yet for this created vote</mark></h5>
			</div>
		}
		<div class="container d-flex justify-content-center">
			<div class="row">
				<div class="col-md-12">
					<div id="piechart3d"></div>
				</div>
			</div>
		</div>
	}
	<div class="text-center mt-3">
		<form asp-action="CreatedVotesReview" method="get">
			<td><button type="submit" style="width:140px !important" class="btn btn-light bg-success btn-outline-primary">Back to Vote Review</button></td>
		</form>
	</div>
</div>

@section Scripts
{
	<script>
		$(document).ready(function () {

			google.charts.load('current', { 'packages': ['corechart'] });
			google.charts.setOnLoadCallback(drawChart);

			function drawChart() {

				var optionsList = ['@Html.Raw(string.Join("', '",Model.ChartVoteOptions))'];
				var countList = ['@Html.Raw(string.Join("', '",Model.ChartVoteTotals))'];


				var data = new google.visualization.DataTable();
				data.addColumn('string', 'Vote Option');
				data.addColumn('number', 'Votes');

				var voteData = [];

				for (var i = 0; i < '@Model.ChartVoteOptions.Count'; i++) {
					var voteRow = [optionsList[i], parseInt(countList[i])];
					voteData.push(voteRow);
				}

				data.addRows(voteData);

				var options = {
					title: 'Your Vote Results',
					titleTextStyle: {fontSize: 30, bold: true},
					legendTextStyle: {bold: true},
					pieSliceText: 'value',
					backgroundColor: '#BEBEBE',
					width: 600,
					height: 500,
					chartArea:{top:'15%',width:'90%',height:'95%'},
					is3D: true
				};

				var chart = new google.visualization.PieChart(document.getElementById('piechart3d'));

				chart.draw(data, options);
			}
		});
	</script>
}
