@using VotingApp.Models
@using Microsoft.CodeAnalysis.VisualBasic.Syntax
@model VotingApp.ViewModel.CreatedVotesVM;
@{
    ViewData["Title"] = "Vote Review Page";
}

<div class="jumbotron jumbotron-fluid full-width text-white" style="margin-bottom: 0px; 
    height: 90vh; 
    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 1)), url(/Images/bannerImage6.jpg); 
    background-size: cover; left: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
    max-width: 100vw;
    position: relative;
    right: 50%;
    width: 100vw;"> 
    <div class="text-center text-white">
        <h1 class="display-4">Vote Review</h1>
        <h3>Review and/or Edit Votes You Have Created</h3>
        <hr class="mb-4"/>

	</div>

    @if (Model != null)
    {
	    <div class="container text-center text-white" >
		    <div class="text-center col-md mx-auto">

			    <table class="table table-borderless rounded bg-dark text-white table-striped" id="accessTable">
                    <tr class="bg-secondary">
					    <th class="text-center">#</th>
					    <th>Title</th>
					    <th>Description</th>
					    <th>Voting Type</th>
					    <th>Anonymous</th>
					    <th>Access Code</th>
					    <th>Vote Open Date/Time</th>
					    <th>Vote Close Date/Time</th>
					    <th>&nbsp;</th>
					    <th>&nbsp</th>
					    <th>&nbsp</th>
				    </tr>

				    @{
					    int i = 1;
				    }
				    @foreach (CreatedVote createdVote in Model.CreatedVotes)
				    {
					    <tr class="text-white-50"
					        @*id="accessLink"
					        data-link="@Html.Raw($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.PathBase}/Access/{createdVote.VoteAccessCode}")"*@>

						    <td>@i</td><td id="Title-@createdVote.Id">@createdVote.VoteTitle</td>
						    @if (createdVote.VoteDiscription.Length > 5)
						    {
							    <td id="Desc-@createdVote.Id"><span data-toggle="tooltip" data-placement="bottom" title="@createdVote.VoteDiscription"> @createdVote.VoteDiscription.Substring(0, 5)</span></td>
						    }
						    else
						    {
							    <td id="Desc-@createdVote.Id">@createdVote.VoteDiscription</td>
						    }
						    <td >@createdVote.VoteType.VotingType</td>
						    <td>@createdVote.AnonymousVote</td>
						    <td>@createdVote.VoteAccessCode <button class="btn btn-light accessBtn" id="accessBtn" data-url="@Html.Raw($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.PathBase}/Access/{createdVote.VoteAccessCode}")">
							    <i class="fa-solid fa-copy fa-2xs"></i></button></td>

						    <td>
							    @if (createdVote.VoteOpenDateTime != null)
							    {@Html.Raw($"{createdVote.VoteOpenDateTime.Value.Month}/{createdVote.VoteOpenDateTime.Value.Day}/{createdVote.VoteOpenDateTime.Value.Year} {createdVote.VoteOpenDateTime.Value.TimeOfDay.ToString("hh\\:mm")}")
							    }
						    </td>
						    <td>
							    @if (createdVote.VoteCloseDateTime != null)
							    {@Html.Raw($"{createdVote.VoteCloseDateTime.Value.Month}/{createdVote.VoteCloseDateTime.Value.Day}/{createdVote.VoteCloseDateTime.Value.Year} {createdVote.VoteCloseDateTime.Value.TimeOfDay.ToString("hh\\:mm")}")
							    }
						    </td>


						    <!--<td ><button type="button" data-toggle="modal" data-target="#editModal" style="width:70px !important" class="btn btn-light bg-success btn-outline-primary" name="edit-button" value=@createdVote.Id onclick="FillValues('@createdVote.Id')">Edit</button></td>-->
						    <td>
							    @if ((createdVote.VoteOpenDateTime == null || createdVote.VoteOpenDateTime >= DateTime.Now) && createdVote.VoteCloseDateTime >= DateTime.Now)
							    {
								    <form asp-action="BackToIndexPage" method="post">
									    <button type="submit" style="width: 140px !important" class="btn btn-light bg-success btn-outline-primary" name="ID" value="@createdVote.Id">Edit</button>
								    </form>
							    }
							    else
							    {
								    <button style="width: 140px !important" class="btn btn-light bg-success btn-outline-primary disabled" name="id" value="@createdVote.Id" disabled>Edit</button>
							    }
							    <form asp-action="VoteResultsButton" method="post">
								    <button type="submit" style="width: 140px !important" class="btn btn-light bg-success btn-outline-primary" name="id" value="@createdVote.Id">Vote Results</button>
							    </form>
                                <form asp-action="VoteAnalyticsButton" method="post">
                                    <button type="submit" style="width: 140px !important" class="btn btn-light bg-success btn-outline-primary" name="id" value="@createdVote.Id">Analytics</button>
                                </form>
                                <button type="button" style="width:140px" class="btn btn-light bg-success btn-outline-primary" data-toggle="modal" data-target="@Html.Raw("#modal" +createdVote.Id)">
                                    Audio
                                </button>

                                <!-- Modal -->
                                <div class="modal fade" id="@Html.Raw("modal" + createdVote.Id)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-body">
                                                <div class="row justify-content-center"><audio controls src="@Url.Action("LoadAudio", "Create", new { id = createdVote.Id })"></audio>
                                                    <button style="max-width: 300px;" type="button" class="btn btn-secondary mt-2" data-dismiss="modal">Close</button></div>
                                            
                                            </div>
                                        </div>
                                    </div>
                                </div>
						    </td>
					    </tr>
					    {
						    i++;
					    }
				    }
			    </table>
			    </div>
        </div>
    }
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content text-black">
                <div class="modal-header bg-secondary">
                    <h5 class="modal-title" id="editModalLabel">Edit Created Vote</h5>
                </div>
                <div class="modal-body">
                    <input asp-for="Id" type="text" id="created-vote-id" hidden></input>
                    <div class="text-center">
					    <label asp-for="VoteTitle">Vote Title (required): <span data-toggle="tooltip" data-placement="bottom" title="This will be the title of the vote you are going to create. It will give voters a general idea about what they are voting on. If you have an account you will also be able to see a list of previous voting results organized by this vote title.">&#8505;</span></label>
					    <textarea asp-for="VoteTitle" class="form-control" type="text" name="vote-title" id="vote-title" rows="1" required></textarea>
					    <span asp-validation-for="VoteTitle" class="text-danger"></span>
				    </div>
				    <div class="text-center">
					    <label asp-for="VoteDescription">Vote Description (required): <span data-toggle="tooltip" data-placement="bottom" title="The vote description is to give users a better idea about why/what they are voting about. If it's a yes/no vote you can use this description to explain to the user what the yes stands for and what the no stands for. Here you can let the users know if there will be a time limit on this vote as well, and more details such as if it will be completely anonymous for even the vote creator to see the results of how individuals voted.">&#8505;</span></label>
					    <textarea asp-for="VoteDescription" class="form-control" type="text" name="vote-description" id="vote-description" rows="5" required></textarea>
					    <span asp-validation-for="VoteDescription" class="text-danger"></span>
				    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClose" class="btn btn-secondary btn-lg bg-info btn-outline-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" id="edit-save" class="btn btn-light btn-lg bg-success btn-outline-primary" onclick="return CheckFieldsValid();">Submit</button>
                </div>
            </div>
        </div>
    </div>    
</div>

@section  Scripts 
{ 
    <script type="text/javascript" src="~/js/site.js"></script> 
}
